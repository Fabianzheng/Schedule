package schedule.view;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.stage.Stage;
import javafx.util.Duration;

import tray.notification.NotificationType;

import tray.notification.TrayNotification;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import java.sql.SQLException;

import java.sql.Statement;
import database.DBConnection;

import javafx.event.ActionEvent;

import javafx.scene.control.PasswordField;

public class Login1Controller {

       @FXML

       private TextField tfusername;

       @FXML

       private Button loginButton;

       @FXML

       private Button cancelButton;

       @FXML

       private PasswordField pfpassword;

       @FXML

       private Button managerButton;
       
       public static String userName = "md";
     
       // Event Listener on Button[#loginButton].onActionlin

       @FXML

       public void loginButtonClicked(ActionEvent event) throws IOException {

           System.out.println("Login Button Clicked!");

           

           if(isAllFieldFillup()){

            userName = tfusername.getText().trim();

                String password = pfpassword.getText();

                

                try {

                               if (isValidCredentials(userName,password)){
                          
                            	   
                             	     Parent person = FXMLLoader.load(getClass().getResource("Workoverview.fxml"));

                                      Scene personScene = new Scene(person);

                                      Stage personStage = (Stage) ((Node) event.getSource()).getScene().getWindow();

                                      personStage.hide();

                                      personStage.setScene(personScene);

                                      personStage.setTitle("Person Overview");

                                      personStage.show();   
                                    
                                  
                             	  System.out.println("Login Successfully!");
                             	  
                             	  System.out.print(userName);      
                             	  
                           /*  	   FXMLLoader loader = new FXMLLoader();
                                   loader.setLocation(getClass().getResource("Login1.fxml"));
                              	  WorkoverviewController controller = loader.getController();
                               	  controller.firstNameLabel.setText(userName);*/
                                    
                          
                               }

                        } catch (SQLException e) {

                               // TODO Auto-generated catch block

                               e.printStackTrace();

                           
                        }}

           
       }

     
       

       // Event Listener on Button[#cancelButton].onAction

       @FXML

       public void cancelButtonClick(ActionEvent event) {

             // TODO Autogenerated

       }

             

       

    private boolean isValidCredentials(String userName, String password) throws SQLException {

        boolean userPassOk = false;

 

        DBConnection database = new DBConnection();

        Connection connection = database.getConnection();

        //Statement statement = connection.createStatement();

        String str = "select * from admin where username = ? and dbAdminPassword = ?";
        PreparedStatement statement = connection.prepareStatement(str);
        statement.setString(1,userName );
        statement.setString(2,password );
        System.out.println(str);

        ResultSet resultSet = statement.executeQuery();

 

        while (resultSet.next()){

            if(resultSet.getString("username")!=null && resultSet.getString("dbAdminPassword")!=null){

                userPassOk = true;

            }

        }

 

        if(!userPassOk) {

            NotificationType notificationType = NotificationType.ERROR;

            TrayNotification tray = new TrayNotification();

            tray.setTitle("Wrong Information");

            tray.setMessage("Incorrect username or password");

            tray.setNotificationType(notificationType);

            tray.showAndDismiss(Duration.millis(3000));

 

            tfusername.clear();

            pfpassword.clear();

 

            userPassOk = false;

        }

        return userPassOk;

    }    

   
    
   
    
    @FXML

    public void managerClicked(ActionEvent event) throws IOException {

        System.out.println("Manager Button Clicked!");

        

         if(isAllFieldFillup()){

             String masterUser = tfusername.getText().trim();

             String masterPassword = pfpassword.getText();

             

             try {

                            if (isValidCredentialion(masterUser,masterPassword)){
                          	     Parent person = FXMLLoader.load(getClass().getResource("ManagerPage.fxml"));

                                   Scene personScene = new Scene(person);

                                   Stage personStage = (Stage) ((Node) event.getSource()).getScene().getWindow();

                                   personStage.hide();

                                   personStage.setScene(personScene);

                                   personStage.setTitle("Person Overview");

                                   personStage.show();   



                                   
                          	  System.out.println("Login Successfully!");

                            }

                     } catch (SQLException e) {

                            // TODO Auto-generated catch block

                            e.printStackTrace();

                     }

         }

 }      
   

    private boolean isValidCredentialion(String masterUser, String masterPassword) throws SQLException {

        boolean userPassOk = false;

 

        DBConnection database = new DBConnection();

        Connection connection = database.getConnection();

      //  Statement statement = connection.createStatement();

        String str = "select * from manager where masterUser = ? and masterPassword = ? ;";
        PreparedStatement statement = connection.prepareStatement(str);
        statement.setString(1,masterUser );
        statement.setString(2,masterPassword );
        System.out.println(str);

        ResultSet resultSet = statement.executeQuery();
        

        System.out.println(str);

       
    

 

        while (resultSet.next()){

            if(resultSet.getString("masterUser")!=null && resultSet.getString("masterPassword")!=null){

                userPassOk = true;

            }

        }

 

        if(!userPassOk) {

            NotificationType notificationType = NotificationType.ERROR;

            TrayNotification tray = new TrayNotification();

            tray.setTitle("Wrong Information");

            tray.setMessage("Incorrect username or password");

            tray.setNotificationType(notificationType);

            tray.showAndDismiss(Duration.millis(3000));

 

            tfusername.clear();

            pfpassword.clear();

 

            userPassOk = false;

        }

        return userPassOk;

    }    
   
    private boolean isAllFieldFillup(){

        boolean fillup;

        if(tfusername.getText().trim().isEmpty()||pfpassword.getText().isEmpty()){

            NotificationType notificationType = NotificationType.INFORMATION;

            TrayNotification tray = new TrayNotification();

            tray.setTitle("Attention!!!");

            tray.setMessage("Username or Password should not Empty.");

            tray.setNotificationType(notificationType);

            tray.showAndDismiss(Duration.millis(3000));

            fillup = false;

        }

        else fillup = true;

        return fillup;

    }        

    
    
    public void registerButtonClicked(ActionEvent event) throws IOException { 

		  Parent person = FXMLLoader.load(getClass().getResource("Register.fxml"));

      Scene personScene = new Scene(person);

      Stage personStage = (Stage) ((Node) event.getSource()).getScene().getWindow();

      personStage.hide();

      personStage.setScene(personScene);

      personStage.setTitle("Person Overview");

      personStage.show();  
    
    
    
}
}
